version: 2.1
jobs:
  build:
    docker:
      - image: cimg/php:8.1.12-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: vagrant
          TEST_DATABASE_URL: http://127.0.0.1:8000
      - image: circleci/postgres:12
        environment:
          POSTGRES_USER: vagrant
          POSTGRES_DB: ocorrencias
          POSTGRES_PASSWORD: vagrant
    steps:
      - add_ssh_keys:
          fingerprints:
            - "70:64:ea:d1:a2:4a:92:69:51:0e:b0:80:46:1c:bb:bf"
      - checkout
      - run:
          name: "Prepare Environment"
          command: |
            sudo apt-get update && sudo apt-get install libpq-dev
            sudo apt-get install redis-server
            sudo service redis-server start

      - run:
          name: "Create Environment file"
          command: |
            cp .env.testing .env
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: "Composer"
          command: |
            composer update
            composer install --dev
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - run:
          name: "Generate App key"
          command: php artisan key:generate

      - run:
          name: "Run migration and populate"
          command: |
            php artisan migrate 
            php artisan db:seed

      - run:
          name: "Install Dusk and Chrome Drivers"
          command: |
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo apt install ./google-chrome-stable_current_amd64.deb

      - run:
          name: "Start Chrome Driver"
          command: |
            php artisan dusk:chrome-driver --detect

      - run:
          name: "Artisan Serve Command"
          command: |
            php artisan serve
          background: true
      - run:
          name: "Dependencies"
          command: |
            touch storage/logs/laravel.log
            chmod 777 storage/logs/laravel.log
      - run:
          name: "Run Browser Tests"
          command: |
            set -e
            php artisan dusk

      - run:
          name: "Email Failure"
          command: |
            sleep 15s
            php artisan email:failure
            cat storage/logs/laravel.log
          when: on_fail
